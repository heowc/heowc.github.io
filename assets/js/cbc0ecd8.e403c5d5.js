"use strict";(self.webpackChunkdocusaurus_blog=self.webpackChunkdocusaurus_blog||[]).push([[3320],{25872:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));n(95657);const o={title:"Spring Boot - Data JPA",slug:"2018/01/09/spring-boot-data-jpa",date:new Date("2018-01-09T23:52:42.000Z"),category:["spring"],tags:["spring","spring-boot","data-jpa"]},p=void 0,s={permalink:"/2018/01/09/spring-boot-data-jpa",source:"@site/blog/spring-boot-data-jpa.md",title:"Spring Boot - Data JPA",description:"Spring Boot\uc5d0\uc11c \uac04\ub2e8\ud55c \uc124\uc815\uc73c\ub85c Hibernate\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.",date:"2018-01-09T23:52:42.000Z",formattedDate:"2018\ub144 1\uc6d4 9\uc77c",tags:[{label:"spring",permalink:"/tags/spring"},{label:"spring-boot",permalink:"/tags/spring-boot"},{label:"data-jpa",permalink:"/tags/data-jpa"}],readingTime:1.495,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Spring Boot - Data JPA",slug:"2018/01/09/spring-boot-data-jpa",date:"2018-01-09T23:52:42.000Z",category:["spring"],tags:["spring","spring-boot","data-jpa"]},prevItem:{title:"Spring Boot - Validation",permalink:"/2018/01/14/spring-boot-hibernate-validation"},nextItem:{title:"Spring Boot - \uc2dc\uc791\ud558\uae30",permalink:"/2018/01/08/spring-boot-start"}},i={authorsImageUrls:[]},l=[{value:"JPA? Hibernate?",id:"jpa-hibernate",level:3},{value:"Dependency",id:"dependency",level:3},{value:"Properties",id:"properties",level:3},{value:"Entity",id:"entity",level:3},{value:"Repository",id:"repository",level:3},{value:"Test Code",id:"test-code",level:3}],u={toc:l},g="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Spring Boot\uc5d0\uc11c \uac04\ub2e8\ud55c \uc124\uc815\uc73c\ub85c Hibernate\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.")),(0,r.kt)("h3",{id:"jpa-hibernate"},"JPA? Hibernate?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"JPA"),": Java Persistence API\uc758 \uc904\uc784\ub9d0\ub85c, \uad00\uacc4\ud615 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uad00\ub9ac\ub97c \ud45c\ud604\ud558\ub294 \uc790\ubc14 API\uc774\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Hibernate"),": \uc790\ubc14\ub97c \uc704\ud55c \uc624\ud508\uc18c\uc2a4 ORM(Object-relational mapping) \ud504\ub808\uc784\uc6cc\ud06c\ub97c \uc81c\uacf5\ud55c\ub2e4. \ubc84\uc804 3.2\uc640 \uadf8 \uc774\ud6c4 \ubc84\uc804\uc5d0\uc11c\ub294 JPA\ub97c \uc704\ud55c \uad6c\ud604\uc744 \uc81c\uacf5\ud55c\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data JPA"),": JPA\uae30\ubc18\uc758 Repository\ub97c \uc27d\uac8c \uad6c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d Spring Data\uc5d0\uc11c \uc81c\uacf5\ud55c\ub2e4."),(0,r.kt)("h3",{id:"dependency"},"Dependency"),(0,r.kt)("p",null,"\uac04\ub2e8\ud55c \uc608\uc81c\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574 h2\ub97c \uc0ac\uc6a9\ud558\uaca0\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    compile('org.springframework.boot:spring-boot-starter-data-jpa')\n    compile('org.projectlombok:lombok')\n    runtime('com.h2database:h2')\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n")),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"spring.jpa.database=H2\n\nspring.datasource.driver-class-name=org.h2.Driver\nspring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\n")),(0,r.kt)("h3",{id:"entity"},"Entity"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Entity\n@Data\n@AllArgsConstructor\npublic class Customer {\n    \n    @Id\n    @GeneratedValue(strategy=GenerationType.AUTO)\n    private Long idx;\n    \n    @Column(length=50)\n    private String name;\n    \n    @Column(length=14)\n    private String tel;\n    \n    private String etc;\n\n    protected Customer() {}\n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@Entity"),"\ub294 \ud574\ub2f9 \ud074\ub798\uc2a4\uac00 JPA\uc758 Entity\uc784\uc744 \ub098\ud0c0\ub0b8\ub2e4."),(0,r.kt)("h3",{id:"repository"},"Repository"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface CustomerRepository extends JpaRepository<Customer, Long> {\n    \n}\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"JpaRepository"),"\ub97c \uc0c1\uc18d\ubc1b\ub294 \uac83 \ub9cc\uc73c\ub85c\ub3c4 \uae30\ubcf8\uc801\uc778 CRUD\uac00 \uac00\ub2a5\ud558\ub2e4. \ub610\ud55c, ",(0,r.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.query-creation"},"query-creation"),"\uc744 \uc774\uc6a9\ud558\uc5ec \ucffc\ub9ac\ub97c \uc791\uc131\ud560 \uc218 \uc788\ub2e4.`"),(0,r.kt)("h3",{id:"test-code"},"Test Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@RunWith(SpringRunner.class)\n@DataJpaTest\npublic class CustomerRepositoryTests {\n\n    @Autowired \n    private CustomerRepository repository;\n\n    private Customer customer() {\n        return new Customer("heo won chul", "010-xxxx-xxxx", "developer");\n    }\n    \n    @Test\n    public void test_insert() {\n        assertEquals(repository.save(customer().getIdx()), customer().getIdx());\n    }\n\n    @Test\n    public void test_select() {\n        assertNull(repository.findOne(1L));\n    }\n}\n')))}d.isMDXComponent=!0}}]);