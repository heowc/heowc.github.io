"use strict";(self.webpackChunkdocusaurus_blog=self.webpackChunkdocusaurus_blog||[]).push([[3613],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(g,o(o({ref:n},c),{},{components:t})):r.createElement(g,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},31027:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],l={title:"Spring Boot - Validation",slug:"2018/01/14/spring-boot-hibernate-validation",date:new Date("2018-01-14T22:26:30.000Z"),category:["spring-boot"],tags:["spring","spring-boot","hibernate-validation"]},p={permalink:"/2018/01/14/spring-boot-hibernate-validation",source:"@site/blog/spring-boot-hibernate-validation.md",title:"Spring Boot - Validation",description:"\ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc720\ud6a8\uc131 \uac80\uc99d\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ub3c4\uc640\uc904 \uc218 \uc788\ub2e4.",date:"2018-01-14T22:26:30.000Z",formattedDate:"2018\ub144 1\uc6d4 14\uc77c",tags:[{label:"spring",permalink:"/tags/spring"},{label:"spring-boot",permalink:"/tags/spring-boot"},{label:"hibernate-validation",permalink:"/tags/hibernate-validation"}],readingTime:2.67,truncated:!0,prevItem:{title:"Spring Boot - Cache",permalink:"/2018/02/05/spring-boot-cache"},nextItem:{title:"Spring Boot - Data JPA",permalink:"/2018/01/09/spring-boot-data-jpa"}},s=[{value:"bean-validation? hibernate-validator?",id:"bean-validation-hibernate-validator",children:[]},{value:"Dependency",id:"dependency",children:[]},{value:"Entity",id:"entity",children:[]},{value:"Controller",id:"controller",children:[]},{value:"Custom Validation",id:"custom-validation",children:[]},{value:"Test Code",id:"test-code",children:[]},{value:"\ucc38\uace0",id:"\ucc38\uace0",children:[]}],c={toc:s};function u(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc720\ud6a8\uc131 \uac80\uc99d\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ub3c4\uc640\uc904 \uc218 \uc788\ub2e4.")),(0,i.kt)("h3",{id:"bean-validation-hibernate-validator"},"bean-validation? hibernate-validator?"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Bean-validation"),": ",(0,i.kt)("a",{parentName:"p",href:"https://jcp.org/en/jsr/detail?id=380"},"JSR-380"),", \uc560\ub178\ud14c\uc774\uc158\uc744 \uc774\uc6a9\ud558\uc5ec bean \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud55c Java API \uc2a4\ud399"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Hibernate-validator"),": Bean Validation\uc744 \uad6c\ud604\ud55c Java API"),(0,i.kt)("h3",{id:"dependency"},"Dependency"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"dependencies { \n    compile('org.springframework.boot:spring-boot-starter-web') \n    compile('org.springframework.boot:spring-boot-starter-validation') \n    compile('org.projectlombok:lombok')\n    runtime('com.h2database:h2')\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n")),(0,i.kt)("h3",{id:"entity"},"Entity"),(0,i.kt)("p",null,"\uc560\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc27d\uac8c Entity\uc5d0 \ub300\ud55c \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ud560 \uc218 \uc788\ub2e4. \ud574\ub2f9 \uc560\ub178\ud14c\uc774\uc158\uc740 javax.validation.constraints\ud328\ud0a4\uc9c0\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc73c\uba70, \uc774\ub97c \uc544\ub798\uc640 \uac19\uc774 \ud65c\uc6a9\ud560 \uc218 \uc788\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Data\npublic class Member {\n\n    private Long idx;\n    \n    @NotNull(message="name null")\n    private String name;\n    \n    @Min(value=14, message="min 14")\n    private Integer age;\n    \n    @NotNull(message="tel null")\n    private String tel;\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@NotNull"),": null \uac80\uc99d\n",(0,i.kt)("inlineCode",{parentName:"p"},"@Min"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@Max"),": \ucd5c\uc18c\uac12, \ucd5c\ub300\uac12 \uac80\uc99d\n",(0,i.kt)("inlineCode",{parentName:"p"},"@Size"),": \ubc94\uc704 \uac80\uc99d\n",(0,i.kt)("inlineCode",{parentName:"p"},"@Email"),": e-mail \uac80\uc99d\n",(0,i.kt)("inlineCode",{parentName:"p"},"@AssertTrue"),": true \uac80\uc99d"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@NotEmpty"),": null\uc774\ub098 size\uac00 0 \uac80\uc99d (String, Collection)\n",(0,i.kt)("inlineCode",{parentName:"p"},"@NotBlank"),": null\uc774\ub098 whitespace \uac80\uc99d (String)\n",(0,i.kt)("inlineCode",{parentName:"p"},"@Positive"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@PositiveOrZero"),": \uc22b\uc790 \uac80\uc99d\n",(0,i.kt)("inlineCode",{parentName:"p"},"@Negative"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@NegativeOrZero"),": \uc22b\uc790 \uac80\uc99d\n",(0,i.kt)("inlineCode",{parentName:"p"},"@Past"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@PastOrPresent"),": \ub0a0\uc9dc \uac80\uc99d\n",(0,i.kt)("inlineCode",{parentName:"p"},"@Future"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"@FutureOrPresent"),": \ub0a0\uc9dc \uac80\uc99d"),(0,i.kt)("h3",{id:"controller"},"Controller"),(0,i.kt)("p",null,"\uac80\uc99d\ud558\uace0\uc790 \ud558\ub294 Entity\uc5d0 @Valid\ub97c \ubd99\uc774\uba70, \uc774\uc5d0 \ub300\ud55c \uacb0\uacfc\ub97c \ubc1b\uae30 \uc704\ud574 BindingResult\ub97c \ucd94\uac00\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@RestController\n@RequestMapping("member")\npublic class MemberController {\n\n    private final static Logger logger = Logger.getLogger(MemberController.class);\n    private final static int ZERO = 0;\n    \n    //...\n        \n    @PostMapping\n    public ResponseEntity<?> add(@Valid @RequestBody Member member, BindingResult bindingResult){\n        if(bindingResult.hasErrors()){\n            String errorMessage = bindingResult.getAllErrors().get(ZERO).getDefaultMessage();\n            return new ResponseEntity<>(errorMessage, HttpStatus.BAD_REQUEST); \n        }\n        return new ResponseEntity<>(member, HttpStatus.OK);\n    }\n}\n')),(0,i.kt)("h3",{id:"custom-validation"},"Custom Validation"),(0,i.kt)("p",null,"\uc81c\uacf5\ud574\uc8fc\ub294 \uc560\ub178\ud14c\uc774\uc158\ub3c4 \ub9ce\uc9c0\ub9cc \uc0ac\uc6a9\uc790 \uc815\uc758 \uac80\uc99d \uc560\ub178\ud14c\uc774\uc158\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud558\ub294 \uc0c1\ud669\uc774 \uc788\uc744 \uc218 \uc788\ub2e4."),(0,i.kt)("h4",{id:"interface-\uc815\uc758"},"@interface \uc815\uc758"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Documented\n@Constraint(validatedBy = PhoneValidator.class)\n@Target( { ElementType.METHOD, ElementType.FIELD })\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Phone {\n    String message() default "Invalid phone number";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n}\n')),(0,i.kt)("h4",{id:"constraintvalidator-\uad6c\ud604"},"ConstraintValidator \uad6c\ud604"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class PhoneValidator implements ConstraintValidator<Phone, String> {\n\n    @Override\n    public void initialize(Phone phone) {\n    \n    }\n \n    @Override\n    public boolean isValid(String field, ConstraintValidatorContext cxt) {\n        return field != null && field.matches("[0-9]+")\n                && (field.length() > 8) && (field.length() < 14);\n    }\n}\n')),(0,i.kt)("h4",{id:"\ud65c\uc6a9"},"\ud65c\uc6a9"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@Phone\nprivate String phone;\n")),(0,i.kt)("h3",{id:"test-code"},"Test Code"),(0,i.kt)("p",null,"\uc790\uc138\ud55c \ucf54\ub4dc\ub294 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/heowc/SpringBootSample/blob/master/SpringBootValidator/src/test/java/com/example/web/MemberControllerTest.java"},"GitHub"),"\uc744 \ucc38\uace0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@RunWith(SpringRunner.class)\n@WebMvcTest(MemberController.class)\npublic class MemberControllerTest {\n\n    @Autowired\n    private MockMvc mvc;\n\n    @Autowired\n    private ObjectMapper objectMapper;\n\n    // ...\n\n    @Test\n    public void test_success() throws Exception {\n        Member member = new Member(TEST_NAME, TEST_AGE, TEST_PHONE);\n        String memberToJson = objectMapper.writeValueAsString(member);\n\n        mockRequest(memberToJson, status().isOk(), memberToJson);\n    }\n\n    // ...\n\n    private void mockRequest(String memberToJson, ResultMatcher matcher, String result) throws Exception {\n        mvc.perform(post(TEST_END_POINT)\n                .content(memberToJson)\n                .contentType(MediaType.APPLICATION_JSON_UTF8)\n                .accept(MediaType.APPLICATION_JSON_UTF8))\n                .andExpect(matcher)\n                .andExpect(content().json(result));\n    }\n}\n")),(0,i.kt)("h3",{id:"\ucc38\uace0"},"\ucc38\uace0"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/heowc/SpringBootSample/tree/master/SpringBootValidator"},"SpringBootSample / SpringBootValidator"),"\n",(0,i.kt)("a",{parentName:"p",href:"http://www.baeldung.com/spring-mvc-custom-validator"},"Baeldung / spring-mvc-custom-validator")))}u.isMDXComponent=!0}}]);